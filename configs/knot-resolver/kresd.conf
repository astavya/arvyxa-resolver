-- Network interface configuration
net.listen('127.0.0.1', 5053, { kind = 'dns' })
net.listen('::1', 5053, { kind = 'dns' })

-- Load useful modules
modules = {
        'hints > iterate',
        'predict',
        'prefill',
        'serve_stale < cache',
        'policy',
        'rebinding < iterate',
}

-- Cache size
cache.size = 250 * MB

-- DNSSEC config
mode('strict')

-- Logs config
log_level('crit')

-- Prefill config
prefill.config({
    ['.'] = {
        url = 'https://www.internic.net/domain/root.zone',
        interval = 86400,
    }
})

-- Block ANY, HINFO, WKS and NULL queries
function match_query_type(action, target_qtype)
    return function (state, query)
        if query.stype == target_qtype then
            return action
        else
            return nil
        end
    end
end
policy.add(match_query_type(policy.DENY, kres.type.ANY))
policy.add(match_query_type(policy.DENY, kres.type.HINFO))
policy.add(match_query_type(policy.DENY, kres.type.WKS))
policy.add(match_query_type(policy.DENY, kres.type.NULL))

-- RPZ blocklists
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-pro.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-apple.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-samsung.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-oppo-realme.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-xiaomi.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-vivo.rpz', true))
policy.add(policy.rpz(policy.DENY_MSG('Blocked by RPZ'), '/etc/knot-resolver/blocklists/hagezi-winoffice.rpz', true))
