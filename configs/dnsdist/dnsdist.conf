pc = newPacketCache(100000, {maxTTL=86400, minTTL=5, temporaryFailureTTL=60, staleTTL=60, dontAge=false})
getPool(""):setCache(pc)

setStructuredLogging(false)
setVerbose(false)

setACL({"0.0.0.0/0", "::/0"})

newServer({address="127.0.0.1:5053", name="knot"})
newServer({address="::1:5053", name="knot"})

addTLSLocal("0.0.0.0:853", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")
addTLSLocal("[::]:853", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")

addDOQLocal("0.0.0.0:853", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")
addDOQLocal("[::]:853", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")

addDOHLocal("0.0.0.0:443", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem", "/dns-query")
addDOHLocal("[::]:443", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem", "/dns-query")

addDOH3Local("0.0.0.0:443", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")
addDOH3Local("[::]:443", "/etc/dnsdist/certs/cert.pem", "/etc/dnsdist/certs/key.pem")

addAction(QClassRule(DNSClass.CHAOS), DropAction())
addAction(OpcodeRule(DNSOpcode.Update), DropAction())

local dbr = dynBlockRulesGroup()
dbr:setQueryRate(25, 10, "Exceeded query rate", 60, DNSAction.Drop)
dbr:setRCodeRate(DNSRCode.NXDOMAIN, 5, 10, "Exceeded NXD rate", 60, DNSAction.Drop)
dbr:setRCodeRate(DNSRCode.SERVFAIL, 5, 10, "Exceeded ServFail rate", 60, DNSAction.Drop)
dbr:setQTypeRate(DNSQType.ANY, 1, 10, "Exceeded ANY rate", 60, DNSAction.Drop)
function maintenance()
  dbr:apply()
end
